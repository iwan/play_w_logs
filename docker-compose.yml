version: '3'

services:
  app:
    build:
      context: .
      dockerfile: docker/production/app/Dockerfile
    env_file:
      .production.env
    command: bin/web
    volumes:
      - gems:/gems
      - ./storage:/storage

  nginx:
    build:
      context: .
      dockerfile: docker/production/nginx/Dockerfile
    depends_on:
      - app
    restart: on-failure
    ports:
      - 96:80

  filebeat:
    hostname: filebeat
    image: docker-logs-elk/filebeat:1.0.0
    build:
      context: docker/production/filebeat
      dockerfile: Dockerfile
    volumes:
      # needed to access all docker logs (read only) :
     - "/var/lib/docker/containers:/usr/share/dockerlogs/data:ro"
      # needed to access additional informations about containers
     - "/var/run/docker.sock:/var/run/docker.sock"
    links:
       - logstash

  kibana:
    image: kibana:6.5.2
    environment:
      - "LOGGING_QUIET=true"
    links:
      - elasticsearch
    ports:
      - 5601:5601

  logstash:
    hostname: logstash
    image: docker-logs-elk/logstash:1.0.0
    build:
      context: docker/production/logstash
      dockerfile: Dockerfile
    ports:
      - 5044:5044
    environment:
      LOG_LEVEL: error
    links:
      - elasticsearch

  elasticsearch:
    hostname: elasticsearch
    image: docker-logs-elk/elasticsearch:1.0.0
    build:
      context: docker/production/elasticsearch
      dockerfile: Dockerfile
    environment:
      - cluster.name=docker-logs-elk-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200

volumes:
  gems: {}
  storage: {}

# docker-compose up -d
# docker-compose down

# docker-compose up -d --no-deps --build web

# Access the container:
#   docker exec -it midilab_web_1_e54a4bb5279f /bin/sh
